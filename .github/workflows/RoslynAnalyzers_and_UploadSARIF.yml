name: "Roslyn analyzers â†’ SARIF (Windows runner)"

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  roslyn-sarif:
    runs-on: [self-hosted, windows, x64]
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore (classic/SDK)
        run: |
          nuget restore "TestA.sln"
          dotnet restore "TestA.sln"
        shell: powershell

      - name: Build and emit SARIF
        id: build
        run: |
          # ensure folder exists
          New-Item -ItemType Directory -Path reports -Force | Out-Null

          # Use MSBuild for full .NET Framework, dotnet for SDK-style projects
          # MSBuild example:
          msbuild "TestA.sln" /t:Rebuild /p:Configuration=Release /p:RunAnalyzers=true /p:ErrorLog=reports\roslyn-report.sarif

          # Alternative (uncomment if using SDK-style projects):
          # dotnet build "TestA.sln" -c Release -p:RunAnalyzers=true -p:ErrorLog=reports/roslyn-report.sarif
        shell: powershell
        continue-on-error: true

      - name: Check for SARIF file
        id: check
        run: |
          if (Test-Path reports\roslyn-report.sarif) {
            "sarif_exists=true" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          } else {
            "sarif_exists=false" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          }
        shell: powershell

      - name: Upload SARIF to GitHub (Code scanning)
        if: steps.check.outputs.sarif_exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/roslyn-report.sarif
